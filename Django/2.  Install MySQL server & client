pi@xyzpi: ~ $ sudo apt-get install mysql-server mysql-client
...
pi@xyzpi: ~ $ sudo mysql_secure_installation


Note:
    Running ALL parts of this script is recommended for all MariaDA servers in production use!
    
In order to log into MariaDB to secure it, we'll need the current password for the root user.
If you've just installed MariaDB, and you haven't set the root password yet, the password will
be blamk, so you should just press enter here.

Enter current pw for root (enter for none):
OK, successfully used pw, moving on...

Setting the root pw ensures that nobody can log into the MariaDB root user without the proper authorisation.


##########################################
# Set Root PW and Remove Anonymous Users #
##########################################

Set root pw? [Y/n]
New pw:
re-enter new pw:
PW updated successfully!
Reloading privilege tables..
... Success!

By default, a MariaDB installation has an anonymous user, allowing anyone to log into MariaDB without 
having to have a user account created for them.
This is intended only for testing, and to make the installation go a bit smoother.
You should remove them before moving into production environment.

Remove anonymous users? [Y/n]
... Success!

####################################################################
# Disallow Root Login Remotely and Remove Test Database and Access #
####################################################################

Normally, root should only be allowed to connect from 'localhost'.
This ensures that someone cannot guess at the root pw from the network.

Disallow root login remotely? [Y/n]
... Success!

By default, MariaDB comes with a database named 'test' that anyone can access.
This is also intended only for testing, and should be removed before moving 
into a production environment.

Remove test dataset and access to it? [Y/n]
  - Dropping test database...
  ... Success!
  - Removing privileges on test database...
  ... Success!
  
  
###########################
# Reload Privilege Tables #
###########################

Reloading the privilege tables will ensure that all changes made so far will
take effect immediately.

Reload privilege tables now? [Y/n]
... Success!

Cleaning up...

All done!
If you've completed all of the above steps, your MariaDB installation should now be secure.

Thanks for using MariaDB!

pi@xyzpi: ~ $
